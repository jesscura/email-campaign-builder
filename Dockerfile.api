# Standalone API container for apps/api (NestJS)
FROM node:20-alpine AS base
WORKDIR /app

# Install dependencies
COPY package.json .
# Copy workspace manifest for npm workspaces
COPY apps/api/package.json apps/api/package.json
COPY prisma/schema.prisma prisma/schema.prisma

RUN npm install --silent

# Build API
COPY apps/api apps/api
RUN npx prisma generate && npm run -w @sagestone/api build

FROM node:20-alpine AS runner
WORKDIR /app
ENV NODE_ENV=production

COPY --from=base /app/node_modules /app/node_modules
COPY --from=base /app/apps/api/dist /app/apps/api/dist

EXPOSE 4000
CMD ["node", "apps/api/dist/main.js"]
FROM node:20-alpine AS base
WORKDIR /app

# Enable Corepack (pnpm)
RUN corepack enable

# Copy root manifests
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./

# Copy monorepo sources needed for API build
COPY sagestone-email ./sagestone-email
COPY prisma ./prisma

# Install dependencies (workspace-aware)
RUN pnpm install --frozen-lockfile

# Generate Prisma Client
RUN pnpm prisma:generate

# Build the NestJS API
RUN pnpm --filter @sagestone/api build

# --- Runtime image ---
FROM node:20-alpine AS runtime
WORKDIR /app
ENV NODE_ENV=production
ENV PORT=4000

# Copy node_modules for runtime and built artifacts
COPY --from=base /app/node_modules ./node_modules
COPY --from=base /app/sagestone-email/apps/api/dist ./sagestone-email/apps/api/dist
COPY --from=base /app/prisma ./prisma

EXPOSE 4000
CMD ["node", "sagestone-email/apps/api/dist/main.js"]
