"use strict";(()=>{var e={};e.id=542,e.ids=[542],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4246:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>h,patchFetch:()=>v,requestAsyncStorage:()=>d,routeModule:()=>l,serverHooks:()=>m,staticGenerationAsyncStorage:()=>c});var a={};t.r(a),t.d(a,{GET:()=>u});var n=t(17370),s=t(35317),o=t(2579),i=t(26567),p=t(76435);async function u(e){try{let e=await p.Z.plan.findMany({where:{isActive:!0},orderBy:{sortOrder:"asc"}});return i.NextResponse.json({plans:e})}catch(e){return console.error("Error fetching plans:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}let l=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/plans/route",pathname:"/api/plans",filename:"route",bundlePath:"app/api/plans/route"},resolvedPagePath:"/home/runner/work/email-builder/email-builder/apps/web/app/api/plans/route.ts",nextConfigOutput:"standalone",userland:a}),{requestAsyncStorage:d,staticGenerationAsyncStorage:c,serverHooks:m}=l,h="/api/plans/route";function v(){return(0,o.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:c})}},76435:(e,r,t)=>{t.d(r,{Z:()=>n});let a=require("@prisma/client"),n=globalThis.prisma??new a.PrismaClient({log:["error"]})}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[910,145],()=>t(4246));module.exports=a})();