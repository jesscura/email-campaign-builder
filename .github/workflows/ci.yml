name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm prisma:generate

      - name: Lint
        run: pnpm lint

      - name: Typecheck
        run: pnpm exec tsc -p tsconfig.json --noEmit

      - name: Build
        env:
          NEXTAUTH_URL: http://localhost:3000
          NEXTAUTH_SECRET: testtesttesttesttesttesttesttest
          ENCRYPTION_SECRET: testtesttesttesttesttesttesttest
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/email_campaign_db?schema=public
          NEXT_PUBLIC_BASE_URL: http://localhost:3000
        run: pnpm build
